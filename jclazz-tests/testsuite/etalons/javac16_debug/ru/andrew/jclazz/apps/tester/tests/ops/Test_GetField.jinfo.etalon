This Class  : ru.andrew.jclazz.apps.tester.tests.ops.Test_GetField
Super Class : java.lang.Object
Implemented Interfaces:

Version: 50.0
JVM supported: 1.6 and greater

Access Flags: 33 ( PUBLIC  SUPER )

Attributes:
@SourceFile: Test_GetField.java

Fields:
f : int
{
    Access Flags: 2 ( PRIVATE )

    Attributes:
}

str : java.lang.String
{
    Access Flags: 9 ( PUBLIC  STATIC )

    Attributes:
}


Methods:
<init> : () : void
{
    Access Flags: 1 ( PUBLIC )

    Attributes:
    CODE
       (
        Max stack = 1
        Max locals = 1
        Attributes:
            @LineNumberTable:
                0: line 9
                4: line 10
            @LocalVariableTable: 
                0+5: this (Lru/andrew/jclazz/apps/tester/tests/ops/Test_GetField;), 0
        Exceptions:
       )
    {
        0 aload_0
        1 invokespecial <init>
        4 return
    }
}

test1 : (ru.andrew.jclazz.apps.tester.tests.ops.Test_GetField) : void
{
    Access Flags: 1 ( PUBLIC )

    Attributes:
    CODE
       (
        Max stack = 2
        Max locals = 2
        Attributes:
            @LineNumberTable:
                0: line 14
                8: line 15
            @LocalVariableTable: 
                0+9: this (Lru/andrew/jclazz/apps/tester/tests/ops/Test_GetField;), 0
                0+9: obj (Lru/andrew/jclazz/apps/tester/tests/ops/Test_GetField;), 1
        Exceptions:
       )
    {
        0 aload_0
        1 aload_1
        2 getfield f
        5 putfield f
        8 return
    }
}

test2 : () : void
{
    Access Flags: 1 ( PUBLIC )

    Attributes:
    CODE
       (
        Max stack = 2
        Max locals = 1
        Attributes:
            @LineNumberTable:
                0: line 19
                9: line 20
            @LocalVariableTable: 
                0+10: this (Lru/andrew/jclazz/apps/tester/tests/ops/Test_GetField;), 0
        Exceptions:
       )
    {
        0 getstatic java.lang.System.out
        3 getstatic ru.andrew.jclazz.apps.tester.tests.ops.Test_GetField.str
        6 invokevirtual println
        9 return
    }
}

Constant Pool:
0: 
1: Methodref: java.lang.Object.<init> (()V)
2: Fieldref: int
3: Fieldref: java.io.PrintStream
4: Fieldref: java.lang.String
5: Methodref: java.io.PrintStream.println ((Ljava/lang/String;)V)
6: Class: ru.andrew.jclazz.apps.tester.tests.ops.Test_GetField
7: Class: java.lang.Object
8: Utf8: f
9: Utf8: I
10: Utf8: str
11: Utf8: Ljava/lang/String;
12: Utf8: <init>
13: Utf8: ()V
14: Utf8: Code
15: Utf8: LineNumberTable
16: Utf8: LocalVariableTable
17: Utf8: this
18: Utf8: Lru/andrew/jclazz/apps/tester/tests/ops/Test_GetField;
19: Utf8: test1
20: Utf8: (Lru/andrew/jclazz/apps/tester/tests/ops/Test_GetField;)V
21: Utf8: obj
22: Utf8: test2
23: Utf8: SourceFile
24: Utf8: Test_GetField.java
25: NameAndType: <init> (()V)
26: NameAndType: f (I)
27: Class: java.lang.System
28: NameAndType: out (Ljava/io/PrintStream;)
29: NameAndType: str (Ljava/lang/String;)
30: Class: java.io.PrintStream
31: NameAndType: println ((Ljava/lang/String;)V)
32: Utf8: ru/andrew/jclazz/apps/tester/tests/ops/Test_GetField
33: Utf8: java/lang/Object
34: Utf8: java/lang/System
35: Utf8: out
36: Utf8: Ljava/io/PrintStream;
37: Utf8: java/io/PrintStream
38: Utf8: println
39: Utf8: (Ljava/lang/String;)V
