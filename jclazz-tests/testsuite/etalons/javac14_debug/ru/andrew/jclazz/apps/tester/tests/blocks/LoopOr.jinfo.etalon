This Class  : ru.andrew.jclazz.apps.tester.tests.blocks.LoopOr
Super Class : java.lang.Object
Implemented Interfaces:

Version: 46.0
JVM supported: 1.2 and greater

Access Flags: 33 ( PUBLIC  SUPER )

Attributes:
@SourceFile: LoopOr.java

Fields:

Methods:
<init> : () : void
{
    Access Flags: 1 ( PUBLIC )

    Attributes:
    CODE
       (
        Max stack = 1
        Max locals = 1
        Attributes:
            @LineNumberTable:
                0: line 7
                4: line 8
            @LocalVariableTable: 
                0+5: this (Lru/andrew/jclazz/apps/tester/tests/blocks/LoopOr;), 0
        Exceptions:
       )
    {
        0 aload_0
        1 invokespecial <init>
        4 return
    }
}

test1 : (int, int) : void
{
    Access Flags: 1 ( PUBLIC )

    Attributes:
    CODE
       (
        Max stack = 2
        Max locals = 3
        Attributes:
            @LineNumberTable:
                0: line 12
                8: line 13
                19: line 15
                27: line 16
                30: line 17
                36: line 19
                44: line 20
            @LocalVariableTable: 
                0+45: this (Lru/andrew/jclazz/apps/tester/tests/blocks/LoopOr;), 0
                0+45: i1 (I), 1
                0+45: i2 (I), 2
        Exceptions:
       )
    {
        0 getstatic java.lang.System.out
        3 ldc "BEFORE LOOP" (java.lang.String)
        5 invokevirtual println
        8 iload_1
        9 iconst_2
        10 if_icmpeq 19
        13 iload_2
        14 bipush 7 (int)
        16 if_icmple 36
        19 getstatic java.lang.System.out
        22 ldc "LOOP" (java.lang.String)
        24 invokevirtual println
        27 iinc LV-1 by 1
        30 iinc LV-2 by 1
        33 goto 8
        36 getstatic java.lang.System.out
        39 ldc "AFTER LOOP" (java.lang.String)
        41 invokevirtual println
        44 return
    }
}

test2 : (int, int, int) : void
{
    Access Flags: 1 ( PUBLIC )

    Attributes:
    CODE
       (
        Max stack = 2
        Max locals = 4
        Attributes:
            @LineNumberTable:
                0: line 24
                8: line 25
                24: line 27
                32: line 28
                35: line 29
                41: line 31
                49: line 32
            @LocalVariableTable: 
                0+50: this (Lru/andrew/jclazz/apps/tester/tests/blocks/LoopOr;), 0
                0+50: i1 (I), 1
                0+50: i2 (I), 2
                0+50: i3 (I), 3
        Exceptions:
       )
    {
        0 getstatic java.lang.System.out
        3 ldc "BEFORE LOOP" (java.lang.String)
        5 invokevirtual println
        8 iload_1
        9 iconst_2
        10 if_icmpeq 24
        13 iload_2
        14 bipush 7 (int)
        16 if_icmpgt 24
        19 iload_3
        20 iconst_4
        21 if_icmpgt 41
        24 getstatic java.lang.System.out
        27 ldc "LOOP" (java.lang.String)
        29 invokevirtual println
        32 iinc LV-1 by 1
        35 iinc LV-2 by 1
        38 goto 8
        41 getstatic java.lang.System.out
        44 ldc "AFTER LOOP" (java.lang.String)
        46 invokevirtual println
        49 return
    }
}

test3 : (int, int, int, int) : void
{
    Access Flags: 1 ( PUBLIC )

    Attributes:
    CODE
       (
        Max stack = 2
        Max locals = 5
        Attributes:
            @LineNumberTable:
                0: line 36
                8: line 37
                32: line 39
                40: line 40
                43: line 41
                49: line 43
                57: line 44
            @LocalVariableTable: 
                0+58: this (Lru/andrew/jclazz/apps/tester/tests/blocks/LoopOr;), 0
                0+58: i1 (I), 1
                0+58: i2 (I), 2
                0+58: i3 (I), 3
                0+58: i4 (I), 4
        Exceptions:
       )
    {
        0 getstatic java.lang.System.out
        3 ldc "BEFORE LOOP" (java.lang.String)
        5 invokevirtual println
        8 iload_1
        9 iconst_2
        10 if_icmpeq 19
        13 iload_2
        14 bipush 7 (int)
        16 if_icmple 49
        19 iload_3
        20 bipush 8 (int)
        22 if_icmplt 32
        25 iload LV-4
        27 bipush 7 (int)
        29 if_icmplt 49
        32 getstatic java.lang.System.out
        35 ldc "LOOP" (java.lang.String)
        37 invokevirtual println
        40 iinc LV-1 by 1
        43 iinc LV-2 by 1
        46 goto 8
        49 getstatic java.lang.System.out
        52 ldc "AFTER LOOP" (java.lang.String)
        54 invokevirtual println
        57 return
    }
}

test4 : (int, int) : void
{
    Access Flags: 1 ( PUBLIC )

    Attributes:
    CODE
       (
        Max stack = 2
        Max locals = 3
        Attributes:
            @LineNumberTable:
                0: line 48
                8: line 51
                16: line 52
                19: line 53
                22: line 55
                33: line 56
                41: line 57
            @LocalVariableTable: 
                0+42: this (Lru/andrew/jclazz/apps/tester/tests/blocks/LoopOr;), 0
                0+42: i1 (I), 1
                0+42: i2 (I), 2
        Exceptions:
       )
    {
        0 getstatic java.lang.System.out
        3 ldc "BEFORE LOOP" (java.lang.String)
        5 invokevirtual println
        8 getstatic java.lang.System.out
        11 ldc "LOOP" (java.lang.String)
        13 invokevirtual println
        16 iinc LV-1 by 1
        19 iinc LV-2 by 1
        22 iload_1
        23 iconst_2
        24 if_icmpeq 8
        27 iload_2
        28 bipush 7 (int)
        30 if_icmpgt 8
        33 getstatic java.lang.System.out
        36 ldc "AFTER LOOP" (java.lang.String)
        38 invokevirtual println
        41 return
    }
}

test5 : (int, int, int) : void
{
    Access Flags: 1 ( PUBLIC )

    Attributes:
    CODE
       (
        Max stack = 2
        Max locals = 4
        Attributes:
            @LineNumberTable:
                0: line 61
                8: line 64
                16: line 65
                19: line 66
                22: line 68
                38: line 69
                46: line 70
            @LocalVariableTable: 
                0+47: this (Lru/andrew/jclazz/apps/tester/tests/blocks/LoopOr;), 0
                0+47: i1 (I), 1
                0+47: i2 (I), 2
                0+47: i3 (I), 3
        Exceptions:
       )
    {
        0 getstatic java.lang.System.out
        3 ldc "BEFORE LOOP" (java.lang.String)
        5 invokevirtual println
        8 getstatic java.lang.System.out
        11 ldc "LOOP" (java.lang.String)
        13 invokevirtual println
        16 iinc LV-1 by 1
        19 iinc LV-2 by 1
        22 iload_1
        23 iconst_2
        24 if_icmpeq 8
        27 iload_2
        28 bipush 7 (int)
        30 if_icmpgt 8
        33 iload_3
        34 iconst_4
        35 if_icmple 8
        38 getstatic java.lang.System.out
        41 ldc "AFTER LOOP" (java.lang.String)
        43 invokevirtual println
        46 return
    }
}

test6 : (int, int, int, int) : void
{
    Access Flags: 1 ( PUBLIC )

    Attributes:
    CODE
       (
        Max stack = 2
        Max locals = 5
        Attributes:
            @LineNumberTable:
                0: line 74
                8: line 77
                16: line 78
                19: line 79
                22: line 80
                33: line 82
                36: line 85
                49: line 86
                57: line 87
            @LocalVariableTable: 
                0+58: this (Lru/andrew/jclazz/apps/tester/tests/blocks/LoopOr;), 0
                0+58: i1 (I), 1
                0+58: i2 (I), 2
                0+58: i3 (I), 3
                0+58: i4 (I), 4
        Exceptions:
       )
    {
        0 getstatic java.lang.System.out
        3 ldc "BEFORE LOOP" (java.lang.String)
        5 invokevirtual println
        8 getstatic java.lang.System.out
        11 ldc "LOOP" (java.lang.String)
        13 invokevirtual println
        16 iinc LV-1 by 1
        19 iinc LV-2 by 1
        22 iload_1
        23 iconst_2
        24 if_icmpeq 36
        27 iload_2
        28 bipush 7 (int)
        30 if_icmpgt 36
        33 goto 49
        36 iload_3
        37 bipush 8 (int)
        39 if_icmplt 8
        42 iload LV-4
        44 bipush 7 (int)
        46 if_icmpge 8
        49 getstatic java.lang.System.out
        52 ldc "AFTER LOOP" (java.lang.String)
        54 invokevirtual println
        57 return
    }
}

test7 : (int, int) : void
{
    Access Flags: 1 ( PUBLIC )

    Attributes:
    CODE
       (
        Max stack = 2
        Max locals = 3
        Attributes:
            @LineNumberTable:
                0: line 91
                8: line 92
                19: line 94
                27: line 95
                30: line 96
                36: line 98
                44: line 99
            @LocalVariableTable: 
                0+45: this (Lru/andrew/jclazz/apps/tester/tests/blocks/LoopOr;), 0
                0+45: i1 (I), 1
                0+45: i2 (I), 2
        Exceptions:
       )
    {
        0 getstatic java.lang.System.out
        3 ldc "BEFORE LOOP" (java.lang.String)
        5 invokevirtual println
        8 iload_1
        9 iconst_2
        10 if_icmpne 36
        13 iload_2
        14 bipush 7 (int)
        16 if_icmple 36
        19 getstatic java.lang.System.out
        22 ldc "LOOP" (java.lang.String)
        24 invokevirtual println
        27 iinc LV-1 by 1
        30 iinc LV-2 by 1
        33 goto 8
        36 getstatic java.lang.System.out
        39 ldc "AFTER LOOP" (java.lang.String)
        41 invokevirtual println
        44 return
    }
}

test8 : (int, int) : void
{
    Access Flags: 1 ( PUBLIC )

    Attributes:
    CODE
       (
        Max stack = 2
        Max locals = 3
        Attributes:
            @LineNumberTable:
                0: line 103
                8: line 106
                16: line 107
                19: line 108
                22: line 109
                27: line 111
                30: line 114
                36: line 115
                44: line 116
            @LocalVariableTable: 
                0+45: this (Lru/andrew/jclazz/apps/tester/tests/blocks/LoopOr;), 0
                0+45: i1 (I), 1
                0+45: i2 (I), 2
        Exceptions:
       )
    {
        0 getstatic java.lang.System.out
        3 ldc "BEFORE LOOP" (java.lang.String)
        5 invokevirtual println
        8 getstatic java.lang.System.out
        11 ldc "LOOP" (java.lang.String)
        13 invokevirtual println
        16 iinc LV-1 by 1
        19 iinc LV-2 by 1
        22 iload_1
        23 iconst_2
        24 if_icmpeq 30
        27 goto 36
        30 iload_2
        31 bipush 7 (int)
        33 if_icmpgt 8
        36 getstatic java.lang.System.out
        39 ldc "AFTER LOOP" (java.lang.String)
        41 invokevirtual println
        44 return
    }
}

test9 : (int, int, int, int) : void
{
    Access Flags: 1 ( PUBLIC )

    Attributes:
    CODE
       (
        Max stack = 2
        Max locals = 5
        Attributes:
            @LineNumberTable:
                0: line 120
                8: line 125
                16: line 126
                19: line 127
                22: line 129
                35: line 130
                43: line 132
                54: line 133
                62: line 134
            @LocalVariableTable: 
                0+63: this (Lru/andrew/jclazz/apps/tester/tests/blocks/LoopOr;), 0
                0+63: i1 (I), 1
                0+63: i2 (I), 2
                0+63: i3 (I), 3
                0+63: i4 (I), 4
        Exceptions:
       )
    {
        0 getstatic java.lang.System.out
        3 ldc "BEFORE LOOP" (java.lang.String)
        5 invokevirtual println
        8 getstatic java.lang.System.out
        11 ldc "LOOP" (java.lang.String)
        13 invokevirtual println
        16 iinc LV-1 by 1
        19 iinc LV-2 by 1
        22 iload_3
        23 bipush 8 (int)
        25 if_icmplt 8
        28 iload LV-4
        30 bipush 7 (int)
        32 if_icmpge 8
        35 getstatic java.lang.System.out
        38 ldc "BETWEEN LOOPS" (java.lang.String)
        40 invokevirtual println
        43 iload_1
        44 iconst_2
        45 if_icmpeq 8
        48 iload_2
        49 bipush 7 (int)
        51 if_icmpgt 8
        54 getstatic java.lang.System.out
        57 ldc "AFTER LOOP" (java.lang.String)
        59 invokevirtual println
        62 return
    }
}

Constant Pool:
0: 
1: Methodref: java.lang.Object.<init> (()V)
2: Fieldref: java.io.PrintStream
3: String: "BEFORE LOOP"
4: Methodref: java.io.PrintStream.println ((Ljava/lang/String;)V)
5: String: "LOOP"
6: String: "AFTER LOOP"
7: String: "BETWEEN LOOPS"
8: Class: ru.andrew.jclazz.apps.tester.tests.blocks.LoopOr
9: Class: java.lang.Object
10: Utf8: <init>
11: Utf8: ()V
12: Utf8: Code
13: Utf8: LineNumberTable
14: Utf8: LocalVariableTable
15: Utf8: this
16: Utf8: Lru/andrew/jclazz/apps/tester/tests/blocks/LoopOr;
17: Utf8: test1
18: Utf8: (II)V
19: Utf8: i1
20: Utf8: I
21: Utf8: i2
22: Utf8: test2
23: Utf8: (III)V
24: Utf8: i3
25: Utf8: test3
26: Utf8: (IIII)V
27: Utf8: i4
28: Utf8: test4
29: Utf8: test5
30: Utf8: test6
31: Utf8: test7
32: Utf8: test8
33: Utf8: test9
34: Utf8: SourceFile
35: Utf8: LoopOr.java
36: NameAndType: <init> (()V)
37: Class: java.lang.System
38: NameAndType: out (Ljava/io/PrintStream;)
39: Utf8: BEFORE LOOP
40: Class: java.io.PrintStream
41: NameAndType: println ((Ljava/lang/String;)V)
42: Utf8: LOOP
43: Utf8: AFTER LOOP
44: Utf8: BETWEEN LOOPS
45: Utf8: ru/andrew/jclazz/apps/tester/tests/blocks/LoopOr
46: Utf8: java/lang/Object
47: Utf8: java/lang/System
48: Utf8: out
49: Utf8: Ljava/io/PrintStream;
50: Utf8: java/io/PrintStream
51: Utf8: println
52: Utf8: (Ljava/lang/String;)V
