This Class  : ru.andrew.jclazz.apps.tester.tests.blocks.TryWithBreakContinue
Super Class : java.lang.Object
Implemented Interfaces:

Version: 50.0
JVM supported: 1.6 and greater

Access Flags: 33 ( PUBLIC  SUPER )

Attributes:

Fields:

Methods:
<init> : () : void
{
    Access Flags: 1 ( PUBLIC )

    Attributes:
    CODE
       (
        Max stack = 1
        Max locals = 1
        Attributes:
        Exceptions:
       )
    {
        0 aload_0
        1 invokespecial <init>
        4 return
    }
}

test1 : () : void
{
    Access Flags: 1 ( PUBLIC )

    Attributes:
    CODE
       (
        Max stack = 2
        Max locals = 3
        Attributes:
            @StackMapTable: 
                AppendFrame (+2): additional locals - Integer
                SameLocals1StackItemFrame (+18): stack item = Object(java.lang.Exception)
                SameFrame (+11): 
                SameFrame (+12): 
            
        Exceptions:
            [10-18): 21 - java.lang.Exception
       )
    {
        0 iconst_1
        1 istore_1
        2 getstatic java.lang.System.out
        5 ldc "START DO" (java.lang.String)
        7 invokevirtual println
        10 getstatic java.lang.System.out
        13 ldc "TRY" (java.lang.String)
        15 invokevirtual println
        18 goto 33
        21 astore_2
        22 getstatic java.lang.System.out
        25 ldc "CATCH" (java.lang.String)
        27 invokevirtual println
        30 goto 46
        33 getstatic java.lang.System.out
        36 ldc "END LOOP" (java.lang.String)
        38 invokevirtual println
        41 iconst_0
        42 iload_1
        43 if_icmpne 2
        46 return
    }
}

test2 : () : void
{
    Access Flags: 1 ( PUBLIC )

    Attributes:
    CODE
       (
        Max stack = 2
        Max locals = 3
        Attributes:
            @StackMapTable: 
                AppendFrame (+2): additional locals - Integer
                SameLocals1StackItemFrame (+18): stack item = Object(java.lang.Exception)
                SameFrame (+21): 
            
        Exceptions:
            [10-18): 21 - java.lang.Exception
       )
    {
        0 iconst_1
        1 istore_1
        2 getstatic java.lang.System.out
        5 ldc "START DO" (java.lang.String)
        7 invokevirtual println
        10 getstatic java.lang.System.out
        13 ldc "TRY" (java.lang.String)
        15 invokevirtual println
        18 goto 43
        21 astore_2
        22 getstatic java.lang.System.out
        25 ldc "CATCH" (java.lang.String)
        27 invokevirtual println
        30 getstatic java.lang.System.out
        33 ldc "END LOOP" (java.lang.String)
        35 invokevirtual println
        38 iconst_0
        39 iload_1
        40 if_icmpne 2
        43 return
    }
}

test3 : () : void
{
    Access Flags: 1 ( PUBLIC )

    Attributes:
    CODE
       (
        Max stack = 2
        Max locals = 3
        Attributes:
            @StackMapTable: 
                AppendFrame (+2): additional locals - Integer
                SameLocals1StackItemFrame (+18): stack item = Object(java.lang.Exception)
                SameFrame (+11): 
                SameFrame (+7): 
            
        Exceptions:
            [10-18): 21 - java.lang.Exception
       )
    {
        0 iconst_1
        1 istore_1
        2 getstatic java.lang.System.out
        5 ldc "START DO" (java.lang.String)
        7 invokevirtual println
        10 getstatic java.lang.System.out
        13 ldc "TRY" (java.lang.String)
        15 invokevirtual println
        18 goto 33
        21 astore_2
        22 getstatic java.lang.System.out
        25 ldc "CATCH" (java.lang.String)
        27 invokevirtual println
        30 goto 41
        33 getstatic java.lang.System.out
        36 ldc "END LOOP" (java.lang.String)
        38 invokevirtual println
        41 iconst_0
        42 iload_1
        43 if_icmpne 2
        46 return
    }
}

test4 : () : void
{
    Access Flags: 1 ( PUBLIC )

    Attributes:
    CODE
       (
        Max stack = 2
        Max locals = 3
        Attributes:
            @StackMapTable: 
                AppendFrame (+2): additional locals - Integer
                SameLocals1StackItemFrame (+18): stack item = Object(java.lang.Exception)
                SameFrame (+16): 
            
        Exceptions:
            [10-18): 21 - java.lang.Exception
       )
    {
        0 iconst_1
        1 istore_1
        2 getstatic java.lang.System.out
        5 ldc "START DO" (java.lang.String)
        7 invokevirtual println
        10 getstatic java.lang.System.out
        13 ldc "TRY" (java.lang.String)
        15 invokevirtual println
        18 goto 38
        21 astore_2
        22 getstatic java.lang.System.out
        25 ldc "CATCH" (java.lang.String)
        27 invokevirtual println
        30 getstatic java.lang.System.out
        33 ldc "END LOOP" (java.lang.String)
        35 invokevirtual println
        38 iconst_0
        39 iload_1
        40 if_icmpne 2
        43 return
    }
}

test4_2 : () : void
{
    Access Flags: 1 ( PUBLIC )

    Attributes:
    CODE
       (
        Max stack = 2
        Max locals = 2
        Attributes:
            @StackMapTable: 
                SameFrame (+0): 
                SameLocals1StackItemFrame (+18): stack item = Object(java.lang.Exception)
            
        Exceptions:
            [8-16): 19 - java.lang.Exception
       )
    {
        0 getstatic java.lang.System.out
        3 ldc "START DO" (java.lang.String)
        5 invokevirtual println
        8 getstatic java.lang.System.out
        11 ldc "TRY" (java.lang.String)
        13 invokevirtual println
        16 goto 0
        19 astore_1
        20 getstatic java.lang.System.out
        23 ldc "CATCH" (java.lang.String)
        25 invokevirtual println
        28 getstatic java.lang.System.out
        31 ldc "END LOOP" (java.lang.String)
        33 invokevirtual println
        36 goto 0
    }
}

Constant Pool:
0: 
1: Methodref: java.lang.Object.<init> (()V)
2: Fieldref: java.io.PrintStream
3: String: "START DO"
4: Methodref: java.io.PrintStream.println ((Ljava/lang/String;)V)
5: String: "TRY"
6: Class: java.lang.Exception
7: String: "CATCH"
8: String: "END LOOP"
9: Class: ru.andrew.jclazz.apps.tester.tests.blocks.TryWithBreakContinue
10: Class: java.lang.Object
11: Utf8: <init>
12: Utf8: ()V
13: Utf8: Code
14: Utf8: test1
15: Utf8: StackMapTable
16: Class: java.lang.Exception
17: Utf8: test2
18: Utf8: test3
19: Utf8: test4
20: Utf8: test4_2
21: NameAndType: <init> (()V)
22: Class: java.lang.System
23: NameAndType: out (Ljava/io/PrintStream;)
24: Utf8: START DO
25: Class: java.io.PrintStream
26: NameAndType: println ((Ljava/lang/String;)V)
27: Utf8: TRY
28: Utf8: java/lang/Exception
29: Utf8: CATCH
30: Utf8: END LOOP
31: Utf8: ru/andrew/jclazz/apps/tester/tests/blocks/TryWithBreakContinue
32: Utf8: java/lang/Object
33: Utf8: java/lang/System
34: Utf8: out
35: Utf8: Ljava/io/PrintStream;
36: Utf8: java/io/PrintStream
37: Utf8: println
38: Utf8: (Ljava/lang/String;)V
