This Class  : ru.andrew.jclazz.apps.tester.tests.composite.LVs
Super Class : java.lang.Object
Implemented Interfaces:

Version: 50.0
JVM supported: 1.6 and greater

Access Flags: 33 ( PUBLIC  SUPER )

Attributes:

Fields:

Methods:
<init> : () : void
{
    Access Flags: 1 ( PUBLIC )

    Attributes:
    CODE
       (
        Max stack = 1
        Max locals = 1
        Attributes:
        Exceptions:
       )
    {
        0 aload_0
        1 invokespecial <init>
        4 return
    }
}

test1 : () : void
{
    Access Flags: 1 ( PUBLIC )

    Attributes:
    CODE
       (
        Max stack = 2
        Max locals = 3
        Attributes:
            @StackMapTable: 
                FullFrame (+12): locals - Object(ru.andrew.jclazz.apps.tester.tests.composite.LVs) Integer, stack - Object(java.lang.Exception)
                SameFrame (+7): 
            
        Exceptions:
            [2-9): 12 - java.lang.Exception
       )
    {
        0 iconst_0
        1 istore_1
        2 bipush 7 (int)
        4 istore_1
        5 iload_1
        6 iconst_4
        7 iand
        8 istore_1
        9 goto 20
        12 astore_2
        13 getstatic java.lang.System.out
        16 aload_2
        17 invokevirtual println
        20 return
    }
}

test2 : (int) : void
{
    Access Flags: 1 ( PUBLIC )

    Attributes:
    CODE
       (
        Max stack = 2
        Max locals = 3
        Attributes:
            @StackMapTable: 
                SameLocals1StackItemFrame (+12): stack item = Object(java.lang.Exception)
                SameFrame (+7): 
            
        Exceptions:
            [2-9): 12 - java.lang.Exception
       )
    {
        0 iconst_0
        1 istore_1
        2 bipush 7 (int)
        4 istore_1
        5 iload_1
        6 iconst_4
        7 iand
        8 istore_1
        9 goto 20
        12 astore_2
        13 getstatic java.lang.System.out
        16 aload_2
        17 invokevirtual println
        20 return
    }
}

test3 : () : java.lang.String
{
    Access Flags: 1 ( PUBLIC )

    Attributes:
    CODE
       (
        Max stack = 2
        Max locals = 3
        Attributes:
            @StackMapTable: 
                FullFrame (+8): locals - Object(ru.andrew.jclazz.apps.tester.tests.composite.LVs) Object(java.lang.String), stack - Object(java.lang.Exception)
                SameFrame (+8): 
            
        Exceptions:
            [2-5): 8 - java.lang.Exception
       )
    {
        0 aconst_null
        1 astore_1
        2 ldc "123" (java.lang.String)
        4 astore_1
        5 goto 17
        8 astore_2
        9 getstatic java.lang.System.out
        12 ldc "EXCEPTION" (java.lang.String)
        14 invokevirtual println
        17 aload_1
        18 areturn
    }
}

test4 : () : void
{
    Access Flags: 1 ( PUBLIC )

    Attributes:
    CODE
       (
        Max stack = 3
        Max locals = 3
        Attributes:
            @StackMapTable: 
                AppendFrame (+10): additional locals - Object(java.util.HashSet) Integer
                SameFrame (+55): 
            
        Exceptions:
       )
    {
        0 new java.util.HashSet
        3 dup
        4 invokespecial <init>
        7 astore_1
        8 iconst_0
        9 istore_2
        10 iload_2
        11 sipush 150 (int)
        14 if_icmpge 66
        17 getstatic java.lang.System.out
        20 ldc "CYCLE" (java.lang.String)
        22 invokevirtual println
        25 new java.util.LinkedHashSet
        28 dup
        29 invokespecial <init>
        32 astore_1
        33 getstatic java.lang.System.out
        36 new java.lang.StringBuilder
        39 dup
        40 invokespecial <init>
        43 ldc "i = " (java.lang.String)
        45 invokevirtual append
        48 iload_2
        49 invokevirtual append
        52 invokevirtual toString
        55 invokevirtual println
        58 iload_2
        59 iconst_1
        60 iadd
        61 i2c
        62 istore_2
        63 goto 10
        66 return
    }
}

test5 : () : void
{
    Access Flags: 1 ( PUBLIC )

    Attributes:
    @Exceptions: 
            java.io.IOException
    CODE
       (
        Max stack = 7
        Max locals = 3
        Attributes:
            @StackMapTable: 
                AppendFrame (+26): additional locals - Object(java.io.BufferedReader) Object(java.lang.String)
                SameFrame (+41): 
            
        Exceptions:
       )
    {
        0 new java.io.BufferedReader
        3 dup
        4 new java.io.InputStreamReader
        7 dup
        8 new java.io.FileInputStream
        11 dup
        12 ldc "path" (java.lang.String)
        14 invokespecial <init>
        17 invokespecial <init>
        20 invokespecial <init>
        23 astore_1
        24 aconst_null
        25 astore_2
        26 aload_1
        27 invokevirtual readLine
        30 dup
        31 astore_2
        32 ldc "456" (java.lang.String)
        34 invokevirtual equals
        37 ifeq 68
        40 getstatic java.lang.System.out
        43 new java.lang.StringBuilder
        46 dup
        47 invokespecial <init>
        50 ldc " = " (java.lang.String)
        52 invokevirtual append
        55 aload_2
        56 invokevirtual append
        59 invokevirtual toString
        62 invokevirtual println
        65 goto 26
        68 return
    }
}

test6 : (boolean) : void
{
    Access Flags: 1 ( PUBLIC )

    Attributes:
    @Exceptions: 
            java.io.IOException
    CODE
       (
        Max stack = 3
        Max locals = 3
        Attributes:
            @StackMapTable: 
                AppendFrame (+2): additional locals - Object(java.io.File)
                SameFrame (+48): 
            
        Exceptions:
       )
    {
        0 aconst_null
        1 astore_2
        2 iload_1
        3 ifeq 51
        6 new java.io.File
        9 dup
        10 ldc "path" (java.lang.String)
        12 invokespecial <init>
        15 dup
        16 astore_2
        17 invokevirtual isDirectory
        20 ifeq 51
        23 getstatic java.lang.System.out
        26 new java.lang.StringBuilder
        29 dup
        30 invokespecial <init>
        33 ldc " = " (java.lang.String)
        35 invokevirtual append
        38 aload_2
        39 invokevirtual append
        42 invokevirtual toString
        45 invokevirtual println
        48 goto 2
        51 return
    }
}

test7 : (boolean) : void
{
    Access Flags: 1 ( PUBLIC )

    Attributes:
    @Exceptions: 
            java.io.IOException
    CODE
       (
        Max stack = 3
        Max locals = 3
        Attributes:
            @StackMapTable: 
                AppendFrame (+2): additional locals - Integer
                SameFrame (+50): 
            
        Exceptions:
       )
    {
        0 iconst_0
        1 istore_2
        2 iload_1
        3 ifeq 53
        6 new java.lang.Integer
        9 dup
        10 ldc "123" (java.lang.String)
        12 invokespecial <init>
        15 invokevirtual intValue
        18 dup
        19 istore_2
        20 bipush 10 (int)
        22 if_icmple 53
        25 getstatic java.lang.System.out
        28 new java.lang.StringBuilder
        31 dup
        32 invokespecial <init>
        35 ldc " = " (java.lang.String)
        37 invokevirtual append
        40 iload_2
        41 invokevirtual append
        44 invokevirtual toString
        47 invokevirtual println
        50 goto 2
        53 return
    }
}

test8 : (java.lang.String, char, int) : void
{
    Access Flags: 1 ( PUBLIC )

    Attributes:
    CODE
       (
        Max stack = 2
        Max locals = 4
        Attributes:
            @StackMapTable: 
                SameFrame (+14): 
            
        Exceptions:
       )
    {
        0 bipush 106 (int)
        2 iload_2
        3 if_icmpne 14
        6 getstatic java.lang.System.out
        9 ldc "IF char" (java.lang.String)
        11 invokevirtual println
        14 return
    }
}

Constant Pool:
0: 
1: Methodref: java.lang.Object.<init> (()V)
2: Class: java.lang.Exception
3: Fieldref: java.io.PrintStream
4: Methodref: java.io.PrintStream.println ((Ljava/lang/Object;)V)
5: String: "123"
6: String: "EXCEPTION"
7: Methodref: java.io.PrintStream.println ((Ljava/lang/String;)V)
8: Class: java.util.HashSet
9: Methodref: java.util.HashSet.<init> (()V)
10: String: "CYCLE"
11: Class: java.util.LinkedHashSet
12: Methodref: java.util.LinkedHashSet.<init> (()V)
13: Class: java.lang.StringBuilder
14: Methodref: java.lang.StringBuilder.<init> (()V)
15: String: "i = "
16: Methodref: java.lang.StringBuilder.append ((Ljava/lang/String;)Ljava/lang/StringBuilder;)
17: Methodref: java.lang.StringBuilder.append ((I)Ljava/lang/StringBuilder;)
18: Methodref: java.lang.StringBuilder.toString (()Ljava/lang/String;)
19: Class: java.io.BufferedReader
20: Class: java.io.InputStreamReader
21: Class: java.io.FileInputStream
22: String: "path"
23: Methodref: java.io.FileInputStream.<init> ((Ljava/lang/String;)V)
24: Methodref: java.io.InputStreamReader.<init> ((Ljava/io/InputStream;)V)
25: Methodref: java.io.BufferedReader.<init> ((Ljava/io/Reader;)V)
26: Methodref: java.io.BufferedReader.readLine (()Ljava/lang/String;)
27: String: "456"
28: Methodref: java.lang.String.equals ((Ljava/lang/Object;)Z)
29: String: " = "
30: Class: java.io.File
31: Methodref: java.io.File.<init> ((Ljava/lang/String;)V)
32: Methodref: java.io.File.isDirectory (()Z)
33: Methodref: java.lang.StringBuilder.append ((Ljava/lang/Object;)Ljava/lang/StringBuilder;)
34: Class: java.lang.Integer
35: Methodref: java.lang.Integer.<init> ((Ljava/lang/String;)V)
36: Methodref: java.lang.Integer.intValue (()I)
37: String: "IF char"
38: Class: ru.andrew.jclazz.apps.tester.tests.composite.LVs
39: Class: java.lang.Object
40: Utf8: <init>
41: Utf8: ()V
42: Utf8: Code
43: Utf8: test1
44: Utf8: StackMapTable
45: Class: ru.andrew.jclazz.apps.tester.tests.composite.LVs
46: Class: java.lang.Exception
47: Utf8: test2
48: Utf8: (I)V
49: Utf8: test3
50: Utf8: ()Ljava/lang/String;
51: Class: java.lang.String
52: Utf8: test4
53: Class: java.util.HashSet
54: Utf8: test5
55: Class: java.io.BufferedReader
56: Utf8: Exceptions
57: Class: java.io.IOException
58: Utf8: test6
59: Utf8: (Z)V
60: Class: java.io.File
61: Utf8: test7
62: Utf8: test8
63: Utf8: (Ljava/lang/String;CI)V
64: NameAndType: <init> (()V)
65: Utf8: java/lang/Exception
66: Class: java.lang.System
67: NameAndType: out (Ljava/io/PrintStream;)
68: Class: java.io.PrintStream
69: NameAndType: println ((Ljava/lang/Object;)V)
70: Utf8: 123
71: Utf8: EXCEPTION
72: NameAndType: println ((Ljava/lang/String;)V)
73: Utf8: java/util/HashSet
74: Utf8: CYCLE
75: Utf8: java/util/LinkedHashSet
76: Utf8: java/lang/StringBuilder
77: Utf8: i = 
78: NameAndType: append ((Ljava/lang/String;)Ljava/lang/StringBuilder;)
79: NameAndType: append ((I)Ljava/lang/StringBuilder;)
80: NameAndType: toString (()Ljava/lang/String;)
81: Utf8: java/io/BufferedReader
82: Utf8: java/io/InputStreamReader
83: Utf8: java/io/FileInputStream
84: Utf8: path
85: NameAndType: <init> ((Ljava/lang/String;)V)
86: NameAndType: <init> ((Ljava/io/InputStream;)V)
87: NameAndType: <init> ((Ljava/io/Reader;)V)
88: NameAndType: readLine (()Ljava/lang/String;)
89: Utf8: 456
90: Class: java.lang.String
91: NameAndType: equals ((Ljava/lang/Object;)Z)
92: Utf8:  = 
93: Utf8: java/io/File
94: NameAndType: isDirectory (()Z)
95: NameAndType: append ((Ljava/lang/Object;)Ljava/lang/StringBuilder;)
96: Utf8: java/lang/Integer
97: NameAndType: intValue (()I)
98: Utf8: IF char
99: Utf8: ru/andrew/jclazz/apps/tester/tests/composite/LVs
100: Utf8: java/lang/Object
101: Utf8: java/lang/String
102: Utf8: java/io/IOException
103: Utf8: java/lang/System
104: Utf8: out
105: Utf8: Ljava/io/PrintStream;
106: Utf8: java/io/PrintStream
107: Utf8: println
108: Utf8: (Ljava/lang/Object;)V
109: Utf8: (Ljava/lang/String;)V
110: Utf8: append
111: Utf8: (Ljava/lang/String;)Ljava/lang/StringBuilder;
112: Utf8: (I)Ljava/lang/StringBuilder;
113: Utf8: toString
114: Utf8: (Ljava/io/InputStream;)V
115: Utf8: (Ljava/io/Reader;)V
116: Utf8: readLine
117: Utf8: equals
118: Utf8: (Ljava/lang/Object;)Z
119: Utf8: isDirectory
120: Utf8: ()Z
121: Utf8: (Ljava/lang/Object;)Ljava/lang/StringBuilder;
122: Utf8: intValue
123: Utf8: ()I
